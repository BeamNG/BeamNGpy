Search.setIndex({"docnames": ["beamng_ros2", "beamng_ros2.beamng", "beamng_ros2.examples", "beamng_ros2.examples.example_client", "beamng_ros2.publishers", "beamng_ros2.publishers.base", "beamng_ros2.publishers.coupling", "beamng_ros2.publishers.road_network", "beamng_ros2.publishers.sensors", "beamng_ros2.publishers.viz", "beamng_ros2.scenario_loader", "beamng_ros2.utils", "beamng_ros2.vehicle", "index", "modules", "setup", "standard_docs/PACKAGE", "standards", "user_docs", "user_docs/setup"], "filenames": ["beamng_ros2.rst", "beamng_ros2.beamng.rst", "beamng_ros2.examples.rst", "beamng_ros2.examples.example_client.rst", "beamng_ros2.publishers.rst", "beamng_ros2.publishers.base.rst", "beamng_ros2.publishers.coupling.rst", "beamng_ros2.publishers.road_network.rst", "beamng_ros2.publishers.sensors.rst", "beamng_ros2.publishers.viz.rst", "beamng_ros2.scenario_loader.rst", "beamng_ros2.utils.rst", "beamng_ros2.vehicle.rst", "index.rst", "modules.rst", "setup.rst", "standard_docs/PACKAGE.rst", "standards.rst", "user_docs.rst", "user_docs/setup.rst"], "titles": ["beamng_ros2 package", "beamng_ros2.beamng module", "beamng_ros2.examples package", "beamng_ros2.examples.example_client module", "beamng_ros2.publishers package", "beamng_ros2.publishers.base module", "beamng_ros2.publishers.coupling module", "beamng_ros2.publishers.road_network module", "beamng_ros2.publishers.sensors module", "beamng_ros2.publishers.viz module", "beamng_ros2.scenario_loader module", "beamng_ros2.utils module", "beamng_ros2.vehicle module", "beamng_ros2", "beamng_ros2", "Setup", "PACKAGE", "Standard Documents", "Documentation", "Setup"], "terms": {"exampl": [0, 10, 14], "example_cli": [0, 2], "exampleclientasync": [0, 2, 3], "main": [0, 1, 2, 3, 9, 14], "publish": [0, 1, 14], "base": [0, 1, 3, 4, 6, 7, 8, 9, 12], "beamngpublish": [0, 4, 5, 7], "vehiclepublish": [0, 4, 5, 6, 8, 9], "coupl": [0, 4], "couplingpublish": [0, 4, 6], "road_network": [0, 4], "networkpublish": [0, 4, 7], "sensor": [0, 4], "list": [0, 1, 3, 4, 7, 10, 11, 12], "advancedimupublish": [0, 4, 8], "autosensorpublish": [0, 4, 8], "camerapublish": [0, 4, 8], "classicalsensorpublish": [0, 4, 8], "damagepublish": [0, 4, 8], "electricspublish": [0, 4, 8], "gforcespublish": [0, 4, 8], "gpspublish": [0, 4, 8], "idealradarpublish": [0, 4, 8], "lidarpublish": [0, 4, 8], "meshpublish": [0, 4, 8], "powertrainsensorpublish": [0, 4, 8], "radarpublish": [0, 4, 8], "roadssensorpublish": [0, 4, 8], "sensorpublish": [0, 4, 8, 10, 12], "statepublish": [0, 4, 8], "timerpublish": [0, 4, 8], "ultrasonicpublish": [0, 4, 8], "viz": [0, 4], "vehiclevisu": [0, 4, 9], "beamng": [0, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16], "beamngbridg": [0, 1, 3, 14], "destroy_nod": [0, 1, 12], "disconnect": [0, 1], "get_current_vehicl": [0, 1], "get_scenario_st": [0, 1], "paus": [0, 1, 7], "publisher_callback_beamng": [0, 1], "resum": [0, 1], "set_paramet": [0, 1], "spawn_vehicl": [0, 1], "start_scenario": [0, 1], "teleport_vehicl": [0, 1], "scenario_load": [0, 14], "decode_scenario": [0, 10, 14], "decode_sensor": [0, 10, 14], "util": [0, 14], "beamng_rot_to_ros_coord": [0, 11, 14], "beamng_vec_to_ros_coord": [0, 11, 14], "dict_to_list": [0, 11, 14], "float_to_dur": [0, 11, 14], "float_to_tim": [0, 11, 14], "get_path": [0, 11, 14], "load_json": [0, 11, 14], "quat_from_dir": [0, 11, 14], "rgba_to_color": [0, 11, 14], "xyz_to_list": [0, 11, 14], "xyz_to_point": [0, 11, 14], "xyz_to_vec3": [0, 11, 14], "xyzw_to_quat": [0, 11, 14], "vehicl": [0, 5, 6, 8, 9, 10, 11, 14], "vehiclenod": [0, 12, 14], "delay_offset_sec": [0, 4, 6, 12], "publisher_callback": [0, 12], "reset_tim": [0, 12], "start_cosimul": [0, 12], "stop_cosimul": [0, 12], "class": [1, 3, 5, 6, 7, 8, 9, 12], "node": [1, 3, 5, 6, 8, 9, 12], "beamngpi": [1, 5, 7, 8], "return": [1, 5, 6, 7, 8, 9, 10, 11], "type": [1, 5, 6, 7, 8, 9, 10, 11], "bool": [1, 10, 12], "destroi": [1, 12], "free": [1, 12], "resourc": [1, 12], "us": [1, 3, 5, 6, 7, 8, 9, 12], "includ": [1, 7, 8, 12], "ani": [1, 6, 8, 10, 11, 12], "entiti": [1, 12], "creat": [1, 4, 5, 7, 8, 12], "follow": [1, 8, 12], "method": [1, 12], "create_publish": [1, 4, 5, 8, 12], "create_subscript": [1, 12], "create_cli": [1, 12], "create_servic": [1, 12], "create_tim": [1, 12], "create_guard_condit": [1, 12], "request": [1, 3, 7, 8, 12], "getcurrentvehiclesinfo_request": 1, "respons": [1, 12], "getcurrentvehiclesinfo_respons": 1, "paramet": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12], "getscenariostate_request": 1, "getscenariostate_respons": 1, "changesimulationstate_request": 1, "changesimulationstate_respons": 1, "parameter_list": 1, "setparametersresult": 1, "set": [1, 8], "result": 1, "action": 1, "If": [1, 8], "wa": 1, "declar": 1, "beforehand": 1, "undeclar": 1, "ar": [1, 8, 10], "allow": 1, "thi": [1, 5, 6, 7, 8, 9], "rais": 1, "parameternotdeclaredexcept": 1, "except": 1, "order": 1, "thei": [1, 8], "fail": 1, "due": 1, "being": 1, "which": [1, 3, 5, 7, 8, 10], "have": [1, 5, 8], "alreadi": 1, "been": 1, "stai": 1, "attempt": 1, "made": 1, "come": 1, "after": [1, 5, 8], "all": [1, 5, 8], "implicitli": 1, "befor": [1, 5, 8], "even": 1, "were": 1, "overrid": [1, 8], "ignor": 1, "callback": 1, "regist": 1, "previous": [1, 7], "add_on_set_parameters_callback": 1, "call": [1, 5, 8], "prior": 1, "onc": [1, 8], "each": 1, "prevent": 1, "from": [1, 7, 8, 10], "reflect": 1, "case": 1, "For": 1, "successfulli": 1, "parameterev": 1, "messag": [1, 5, 6, 7, 8, 9], "i": [1, 5, 8], "valu": [1, 6, 8], "not_set": 1, "exist": 1, "someth": 1, "els": 1, "The": [1, 3, 5, 7, 8, 9, 10], "least": 1, "one": [1, 8], "hadn": 1, "t": 1, "spawnvehicle_request": 1, "spawnvehicle_respons": 1, "startscenario_request": 1, "startscenario_respons": 1, "teleportvehicle_request": 1, "teleportvehicle_respons": 1, "param": 1, "none": [1, 3, 5, 6, 7, 8, 12], "arg": [1, 3], "send_request": [2, 3], "A": [3, 5, 7, 8], "minim": 3, "work": 3, "client": 3, "startscenario": 3, "servic": 3, "spawn": 3, "default": [3, 8], "scenario": [3, 5, 7, 8, 10], "config": [3, 6, 8, 10], "example_tech_ground": 3, "json": [3, 8, 10], "send": [3, 4, 6, 8], "entrypoint": 3, "command": 3, "line": 3, "argument": [3, 8, 10], "rclpy": [3, 5, 8, 16], "get_nam": [4, 5], "msg_type": [4, 5, 6, 7, 8, 9], "post_scenario_start": [4, 5, 8], "pre_scenario_start": [4, 5, 8], "clear_send_buff": [4, 6], "recv": [4, 6], "stop": [4, 6], "subscription_callback": [4, 6], "subscription_callback_namevalu": [4, 6], "update_send_buff": [4, 6], "get_data": [4, 7, 8, 9], "set_up_road_network_viz": [4, 7], "poll": [4, 8], "remov": [4, 8], "get_sensor_config": [4, 8], "get_sensor_publish": [4, 8], "abc": 5, "ros2": [5, 6, 7, 8, 9, 10, 13, 16], "an": [5, 8], "inner": [5, 6, 8, 9], "instanc": [5, 6, 7, 8, 9], "defin": [5, 8], "function": [5, 6, 7, 8, 9], "str": [5, 6, 8, 10, 11, 12], "name": [5, 6, 8, 16], "also": 5, "topic": [5, 8], "abstract": [5, 8], "access": [5, 8], "connect": [5, 7, 8], "hook": [5, 8], "load": [5, 8], "start": [5, 8], "simul": [5, 7, 8], "moment": [5, 8], "time": [5, 7, 8, 9, 11], "correspond": [5, 6, 8, 9], "data": [5, 6, 7, 8, 9, 10, 11], "need": [5, 6, 8, 9], "implement": [5, 6, 8, 9], "deriv": [5, 6, 8, 9], "dict": [6, 8, 10, 11], "10": [6, 12], "0": [6, 11, 12, 16], "ndarrai": [6, 9, 11], "msg": 6, "address": 6, "cosimulationdata": 6, "cosimulationinput": 6, "float": [6, 9, 11], "period": [7, 8], "about": [7, 9], "road": [7, 8], "network": 7, "current": 7, "run": 7, "markerarrai": [7, 9], "pars": 7, "aviail": 7, "format": [7, 8, 16], "expect": 7, "header": [7, 8], "get": [7, 8], "marker": [7, 9], "add": 7, "delet": 7, "attribut": 8, "locat": 8, "file": [8, 10], "you": 8, "can": 8, "complet": 8, "avail": 8, "integr": [8, 13, 16], "imu": 8, "advancedimu": 8, "camera": 8, "gp": 8, "idealradar": 8, "lidar": 8, "mesh": 8, "powertrain": 8, "powertrainpublish": 8, "powertrainsensor": 8, "radar": 8, "roadssensor": 8, "ultrason": 8, "damag": 8, "electr": 8, "gforc": 8, "state": 8, "timer": 8, "some": 8, "support": 8, "share": 8, "memori": 8, "without": 8, "explicit": 8, "enabl": 8, "is_using_shared_memori": 8, "true": [8, 12], "is_stream": 8, "stream": 8, "updat": 8, "standard": [8, 13], "pass": 8, "prototyp": 8, "callabl": [8, 10], "autom": 8, "requir": 8, "constructor": 8, "raw": 8, "multipl": 8, "imag": 8, "depend": [8, 16], "configur": 8, "cam_nam": 8, "colour": 8, "color": [8, 9], "is_render_colour": 8, "annot": 8, "semant": 8, "is_render_annot": 8, "object": [8, 10], "is_render_inst": 8, "depth": 8, "is_render_depth": 8, "Not": 8, "custom": 8, "logic": 8, "classic": 8, "usual": 8, "done": 8, "central": 8, "wai": 8, "therefor": 8, "damagesensor": 8, "electricssensor": 8, "gforcesensor": 8, "navsatfix": 8, "idealradarsensor": 8, "pointcloud2": 8, "meshsensor": 8, "radar_msg": [8, 16], "radarreturn": 8, "librari": 8, "found": 8, "forc": 8, "alwai": 8, "use_beamng_msg_typ": 8, "definit": 8, "static": 8, "specif": 8, "extra": 8, "underli": 8, "ha": 8, "uniqu": 8, "either": 8, "field": 8, "dictionari": [8, 10], "up": [8, 11], "sensor_typ": 8, "sensor_config_nam": 8, "its": 8, "where": 8, "kei": 8, "string": 8, "repres": [8, 11], "see": 8, "top": 8, "comprehens": 8, "empti": 8, "provid": [8, 9, 10], "take": 8, "two": 8, "statesensor": 8, "keep": 8, "mind": 8, "everi": 8, "do": 8, "specifi": 8, "timesensor": 8, "sinc": 8, "same": 8, "rang": 8, "scale": 9, "tupl": [9, 10, 11], "offset": 9, "arrow_color": 9, "inform": 9, "posit": 9, "rotat": [9, 11], "form": 9, "meter": 9, "coordin": [9, 11], "system": 9, "between": 9, "we": 9, "visual": [9, 12], "geometr": 9, "center": 9, "arrow": 9, "point": [9, 11], "direct": 9, "help": 10, "decod": 10, "directori": 10, "scenario_spec": 10, "python": [10, 13], "sensors_spec": 10, "quat": 11, "transform": 11, "quaternion": 11, "space": 11, "x": 11, "left": 11, "y": 11, "backward": 11, "z": 11, "ro": [11, 16], "forward": 11, "vec": 11, "vector": 11, "durat": 11, "start_tim": 11, "filenam": 11, "path": 11, "r": 11, "g": 11, "b": 11, "1": [11, 16], "colorrgba": 11, "vector3": 11, "w": 11, "parent": 12, "ros_sensor": 12, "cosimul": 12, "startcosimulation_request": 12, "startcosimulation_respons": 12, "stopcosimulation_request": 12, "stopcosimulation_respons": 12, "tech": [13, 16], "ecosystem": [13, 16], "api": 13, "packag": [13, 14, 17], "document": 13, "setup": [13, 18], "subpackag": 14, "submodul": 14, "modul": 14, "content": 14, "xml": 16, "version": 16, "model": 16, "href": 16, "http": 16, "download": 16, "org": 16, "schema": 16, "package_format3": 16, "xsd": 16, "schematypen": 16, "www": 16, "w3": 16, "2001": 16, "xmlschema": 16, "3": 16, "beamng_ros2": 16, "descript": 16, "maintain": 16, "email": 16, "gmbh": 16, "licens": 16, "mit": 16, "build_depend": 16, "rosidl_default_gener": 16, "exec_depend": 16, "rosidl_default_runtim": 16, "member_of_group": 16, "rosidl_interface_packag": 16, "std_msg": 16, "tf2": 16, "beamng_msg": 16, "sensor_msg": 16, "visualization_msg": 16, "test_depend": 16, "ament_copyright": 16, "ament_flake8": 16, "ament_pep257": 16, "python3": 16, "pytest": 16, "export": 16, "build_typ": 16, "ament_python": 16}, "objects": {"": [[0, 0, 0, "-", "beamng_ros2"]], "beamng_ros2": [[1, 0, 0, "-", "beamng"], [2, 0, 0, "-", "examples"], [4, 0, 0, "-", "publishers"], [10, 0, 0, "-", "scenario_loader"], [11, 0, 0, "-", "utils"], [12, 0, 0, "-", "vehicle"]], "beamng_ros2.beamng": [[1, 1, 1, "", "BeamNGBridge"], [1, 3, 1, "", "main"]], "beamng_ros2.beamng.BeamNGBridge": [[1, 2, 1, "", "beamng"], [1, 2, 1, "", "destroy_node"], [1, 2, 1, "", "disconnect"], [1, 2, 1, "", "get_current_vehicles"], [1, 2, 1, "", "get_scenario_state"], [1, 2, 1, "", "pause"], [1, 2, 1, "", "publisher_callback_beamng"], [1, 2, 1, "", "resume"], [1, 2, 1, "", "set_parameters"], [1, 2, 1, "", "spawn_vehicle"], [1, 2, 1, "", "start_scenario"], [1, 2, 1, "", "teleport_vehicle"]], "beamng_ros2.examples": [[3, 0, 0, "-", "example_client"]], "beamng_ros2.examples.example_client": [[3, 1, 1, "", "ExampleClientAsync"], [3, 3, 1, "", "main"]], "beamng_ros2.examples.example_client.ExampleClientAsync": [[3, 2, 1, "", "send_request"]], "beamng_ros2.publishers": [[5, 0, 0, "-", "base"], [6, 0, 0, "-", "coupling"], [7, 0, 0, "-", "road_network"], [8, 0, 0, "-", "sensors"], [9, 0, 0, "-", "viz"]], "beamng_ros2.publishers.base": [[5, 1, 1, "", "BeamNGPublisher"], [5, 1, 1, "", "VehiclePublisher"]], "beamng_ros2.publishers.base.BeamNGPublisher": [[5, 2, 1, "", "create_publisher"], [5, 2, 1, "", "get_name"], [5, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.base.VehiclePublisher": [[5, 2, 1, "", "post_scenario_start"], [5, 2, 1, "", "pre_scenario_start"], [5, 2, 1, "", "publish"]], "beamng_ros2.publishers.coupling": [[6, 1, 1, "", "CouplingPublisher"]], "beamng_ros2.publishers.coupling.CouplingPublisher": [[6, 4, 1, "", "DELAY_OFFSET_SEC"], [6, 2, 1, "", "clear_send_buffer"], [6, 2, 1, "", "msg_type"], [6, 2, 1, "", "publish"], [6, 2, 1, "", "recv"], [6, 2, 1, "", "send"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscription_callback"], [6, 2, 1, "", "subscription_callback_namevalue"], [6, 2, 1, "", "update_send_buffer"]], "beamng_ros2.publishers.road_network": [[7, 1, 1, "", "NetworkPublisher"]], "beamng_ros2.publishers.road_network.NetworkPublisher": [[7, 2, 1, "", "get_data"], [7, 2, 1, "", "msg_type"], [7, 2, 1, "", "publish"], [7, 2, 1, "", "set_up_road_network_viz"]], "beamng_ros2.publishers.sensors": [[8, 1, 1, "", "AdvancedIMUPublisher"], [8, 1, 1, "", "AutoSensorPublisher"], [8, 1, 1, "", "CameraPublisher"], [8, 1, 1, "", "ClassicalSensorPublisher"], [8, 1, 1, "", "DamagePublisher"], [8, 1, 1, "", "ElectricsPublisher"], [8, 1, 1, "", "GForcesPublisher"], [8, 1, 1, "", "GPSPublisher"], [8, 1, 1, "", "IdealRadarPublisher"], [8, 1, 1, "", "LidarPublisher"], [8, 1, 1, "", "MeshPublisher"], [8, 1, 1, "", "PowertrainSensorPublisher"], [8, 1, 1, "", "RadarPublisher"], [8, 1, 1, "", "RoadsSensorPublisher"], [8, 1, 1, "", "SensorPublisher"], [8, 1, 1, "", "StatePublisher"], [8, 1, 1, "", "TimerPublisher"], [8, 1, 1, "", "UltrasonicPublisher"]], "beamng_ros2.publishers.sensors.AdvancedIMUPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.AutoSensorPublisher": [[8, 2, 1, "", "poll"], [8, 2, 1, "", "post_scenario_start"], [8, 2, 1, "", "remove"]], "beamng_ros2.publishers.sensors.CameraPublisher": [[8, 2, 1, "", "create_publisher"], [8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"], [8, 2, 1, "", "publish"]], "beamng_ros2.publishers.sensors.ClassicalSensorPublisher": [[8, 2, 1, "", "poll"], [8, 2, 1, "", "pre_scenario_start"], [8, 2, 1, "", "remove"]], "beamng_ros2.publishers.sensors.DamagePublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.ElectricsPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.GForcesPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.GPSPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.IdealRadarPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.LidarPublisher": [[8, 2, 1, "", "create_publisher"], [8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.MeshPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.PowertrainSensorPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.RadarPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.RoadsSensorPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.SensorPublisher": [[8, 2, 1, "", "create"], [8, 2, 1, "", "create_publisher"], [8, 2, 1, "", "get_data"], [8, 2, 1, "", "get_sensor_config"], [8, 2, 1, "", "get_sensor_publisher"], [8, 2, 1, "", "poll"], [8, 2, 1, "", "publish"], [8, 2, 1, "", "remove"]], "beamng_ros2.publishers.sensors.StatePublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"], [8, 2, 1, "", "pre_scenario_start"]], "beamng_ros2.publishers.sensors.TimerPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.sensors.UltrasonicPublisher": [[8, 2, 1, "", "get_data"], [8, 2, 1, "", "msg_type"]], "beamng_ros2.publishers.viz": [[9, 1, 1, "", "VehicleVisualizer"]], "beamng_ros2.publishers.viz.VehicleVisualizer": [[9, 2, 1, "", "get_data"], [9, 2, 1, "", "msg_type"], [9, 2, 1, "", "publish"]], "beamng_ros2.scenario_loader": [[10, 3, 1, "", "decode_scenario"], [10, 3, 1, "", "decode_sensors"]], "beamng_ros2.utils": [[11, 3, 1, "", "beamng_rot_to_ros_coords"], [11, 3, 1, "", "beamng_vec_to_ros_coords"], [11, 3, 1, "", "dict_to_list"], [11, 3, 1, "", "float_to_duration"], [11, 3, 1, "", "float_to_time"], [11, 3, 1, "", "get_path"], [11, 3, 1, "", "load_json"], [11, 3, 1, "", "quat_from_dir"], [11, 3, 1, "", "rgba_to_color"], [11, 3, 1, "", "xyz_to_list"], [11, 3, 1, "", "xyz_to_point"], [11, 3, 1, "", "xyz_to_vec3"], [11, 3, 1, "", "xyzw_to_quat"]], "beamng_ros2.vehicle": [[12, 1, 1, "", "VehicleNode"]], "beamng_ros2.vehicle.VehicleNode": [[12, 4, 1, "", "DELAY_OFFSET_SEC"], [12, 2, 1, "", "destroy_node"], [12, 2, 1, "", "publisher_callback"], [12, 2, 1, "", "reset_timer"], [12, 2, 1, "", "start_cosimulation"], [12, 2, 1, "", "stop_cosimulation"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"beamng_ros2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [0, 2, 4, 16], "subpackag": 0, "submodul": [0, 2, 4], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "content": [0, 2, 4], "beamng": 1, "exampl": [2, 3], "example_cli": 3, "publish": [4, 5, 6, 7, 8, 9], "base": 5, "coupl": 6, "road_network": 7, "sensor": 8, "list": 8, "viz": 9, "scenario_load": 10, "util": 11, "vehicl": 12, "setup": [15, 19], "scenario": [15, 19], "file": [15, 19], "standard": 17, "document": [17, 18]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"beamng_ros2 package": [[0, "beamng-ros2-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"]], "Module contents": [[0, "module-beamng_ros2"], [2, "module-beamng_ros2.examples"], [4, "module-beamng_ros2.publishers"]], "beamng_ros2.beamng module": [[1, "module-beamng_ros2.beamng"]], "beamng_ros2.examples package": [[2, "beamng-ros2-examples-package"]], "beamng_ros2.examples.example_client module": [[3, "module-beamng_ros2.examples.example_client"]], "beamng_ros2.publishers package": [[4, "beamng-ros2-publishers-package"]], "beamng_ros2.publishers.base module": [[5, "module-beamng_ros2.publishers.base"]], "beamng_ros2.publishers.coupling module": [[6, "module-beamng_ros2.publishers.coupling"]], "beamng_ros2.publishers.road_network module": [[7, "module-beamng_ros2.publishers.road_network"]], "beamng_ros2.publishers.sensors module": [[8, "module-beamng_ros2.publishers.sensors"]], "Sensor Publishers List": [[8, "sensor-publishers-list"]], "beamng_ros2.publishers.viz module": [[9, "module-beamng_ros2.publishers.viz"]], "beamng_ros2.scenario_loader module": [[10, "module-beamng_ros2.scenario_loader"]], "beamng_ros2.utils module": [[11, "module-beamng_ros2.utils"]], "beamng_ros2.vehicle module": [[12, "module-beamng_ros2.vehicle"]], "beamng_ros2": [[13, "beamng-ros2"], [14, "beamng-ros2"]], "Setup": [[15, "setup"], [19, "setup"]], "Scenario Files": [[15, "scenario-files"], [19, "scenario-files"]], "PACKAGE": [[16, "package"]], "Standard Documents": [[17, "standard-documents"]], "Documentation": [[18, "documentation"]]}, "indexentries": {"beamng_ros2": [[0, "module-beamng_ros2"]], "module": [[0, "module-beamng_ros2"], [1, "module-beamng_ros2.beamng"], [2, "module-beamng_ros2.examples"], [3, "module-beamng_ros2.examples.example_client"], [4, "module-beamng_ros2.publishers"], [5, "module-beamng_ros2.publishers.base"], [6, "module-beamng_ros2.publishers.coupling"], [7, "module-beamng_ros2.publishers.road_network"], [8, "module-beamng_ros2.publishers.sensors"], [9, "module-beamng_ros2.publishers.viz"], [10, "module-beamng_ros2.scenario_loader"], [11, "module-beamng_ros2.utils"], [12, "module-beamng_ros2.vehicle"]], "beamngbridge (class in beamng_ros2.beamng)": [[1, "beamng_ros2.beamng.BeamNGBridge"]], "beamng() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.beamng"]], "beamng_ros2.beamng": [[1, "module-beamng_ros2.beamng"]], "destroy_node() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.destroy_node"]], "disconnect() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.disconnect"]], "get_current_vehicles() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.get_current_vehicles"]], "get_scenario_state() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.get_scenario_state"]], "main() (in module beamng_ros2.beamng)": [[1, "beamng_ros2.beamng.main"]], "pause() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.pause"]], "publisher_callback_beamng() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.publisher_callback_beamng"]], "resume() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.resume"]], "set_parameters() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.set_parameters"]], "spawn_vehicle() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.spawn_vehicle"]], "start_scenario() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.start_scenario"]], "teleport_vehicle() (beamng_ros2.beamng.beamngbridge method)": [[1, "beamng_ros2.beamng.BeamNGBridge.teleport_vehicle"]], "beamng_ros2.examples": [[2, "module-beamng_ros2.examples"]], "exampleclientasync (class in beamng_ros2.examples.example_client)": [[3, "beamng_ros2.examples.example_client.ExampleClientAsync"]], "beamng_ros2.examples.example_client": [[3, "module-beamng_ros2.examples.example_client"]], "main() (in module beamng_ros2.examples.example_client)": [[3, "beamng_ros2.examples.example_client.main"]], "send_request() (beamng_ros2.examples.example_client.exampleclientasync method)": [[3, "beamng_ros2.examples.example_client.ExampleClientAsync.send_request"]], "beamng_ros2.publishers": [[4, "module-beamng_ros2.publishers"]], "beamngpublisher (class in beamng_ros2.publishers.base)": [[5, "beamng_ros2.publishers.base.BeamNGPublisher"]], "vehiclepublisher (class in beamng_ros2.publishers.base)": [[5, "beamng_ros2.publishers.base.VehiclePublisher"]], "beamng_ros2.publishers.base": [[5, "module-beamng_ros2.publishers.base"]], "create_publisher() (beamng_ros2.publishers.base.beamngpublisher method)": [[5, "beamng_ros2.publishers.base.BeamNGPublisher.create_publisher"]], "get_name() (beamng_ros2.publishers.base.beamngpublisher method)": [[5, "beamng_ros2.publishers.base.BeamNGPublisher.get_name"]], "msg_type() (beamng_ros2.publishers.base.beamngpublisher method)": [[5, "beamng_ros2.publishers.base.BeamNGPublisher.msg_type"]], "post_scenario_start() (beamng_ros2.publishers.base.vehiclepublisher method)": [[5, "beamng_ros2.publishers.base.VehiclePublisher.post_scenario_start"]], "pre_scenario_start() (beamng_ros2.publishers.base.vehiclepublisher method)": [[5, "beamng_ros2.publishers.base.VehiclePublisher.pre_scenario_start"]], "publish() (beamng_ros2.publishers.base.vehiclepublisher method)": [[5, "beamng_ros2.publishers.base.VehiclePublisher.publish"]], "couplingpublisher (class in beamng_ros2.publishers.coupling)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher"]], "delay_offset_sec (beamng_ros2.publishers.coupling.couplingpublisher attribute)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.DELAY_OFFSET_SEC"]], "beamng_ros2.publishers.coupling": [[6, "module-beamng_ros2.publishers.coupling"]], "clear_send_buffer() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.clear_send_buffer"]], "msg_type() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.msg_type"]], "publish() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.publish"]], "recv() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.recv"]], "send() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.send"]], "stop() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.stop"]], "subscription_callback() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.subscription_callback"]], "subscription_callback_namevalue() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.subscription_callback_namevalue"]], "update_send_buffer() (beamng_ros2.publishers.coupling.couplingpublisher method)": [[6, "beamng_ros2.publishers.coupling.CouplingPublisher.update_send_buffer"]], "networkpublisher (class in beamng_ros2.publishers.road_network)": [[7, "beamng_ros2.publishers.road_network.NetworkPublisher"]], "beamng_ros2.publishers.road_network": [[7, "module-beamng_ros2.publishers.road_network"]], "get_data() (beamng_ros2.publishers.road_network.networkpublisher method)": [[7, "beamng_ros2.publishers.road_network.NetworkPublisher.get_data"]], "msg_type() (beamng_ros2.publishers.road_network.networkpublisher method)": [[7, "beamng_ros2.publishers.road_network.NetworkPublisher.msg_type"]], "publish() (beamng_ros2.publishers.road_network.networkpublisher method)": [[7, "beamng_ros2.publishers.road_network.NetworkPublisher.publish"]], "set_up_road_network_viz() (beamng_ros2.publishers.road_network.networkpublisher method)": [[7, "beamng_ros2.publishers.road_network.NetworkPublisher.set_up_road_network_viz"]], "advancedimupublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.AdvancedIMUPublisher"]], "autosensorpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.AutoSensorPublisher"]], "camerapublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.CameraPublisher"]], "classicalsensorpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.ClassicalSensorPublisher"]], "damagepublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.DamagePublisher"]], "electricspublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.ElectricsPublisher"]], "gforcespublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.GForcesPublisher"]], "gpspublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.GPSPublisher"]], "idealradarpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.IdealRadarPublisher"]], "lidarpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.LidarPublisher"]], "meshpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.MeshPublisher"]], "powertrainsensorpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.PowertrainSensorPublisher"]], "radarpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.RadarPublisher"]], "roadssensorpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.RoadsSensorPublisher"]], "sensorpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher"]], "statepublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.StatePublisher"]], "timerpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.TimerPublisher"]], "ultrasonicpublisher (class in beamng_ros2.publishers.sensors)": [[8, "beamng_ros2.publishers.sensors.UltrasonicPublisher"]], "beamng_ros2.publishers.sensors": [[8, "module-beamng_ros2.publishers.sensors"]], "create() (beamng_ros2.publishers.sensors.sensorpublisher static method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.create"]], "create_publisher() (beamng_ros2.publishers.sensors.camerapublisher method)": [[8, "beamng_ros2.publishers.sensors.CameraPublisher.create_publisher"]], "create_publisher() (beamng_ros2.publishers.sensors.lidarpublisher method)": [[8, "beamng_ros2.publishers.sensors.LidarPublisher.create_publisher"]], "create_publisher() (beamng_ros2.publishers.sensors.sensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.create_publisher"]], "get_data() (beamng_ros2.publishers.sensors.advancedimupublisher method)": [[8, "beamng_ros2.publishers.sensors.AdvancedIMUPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.camerapublisher method)": [[8, "beamng_ros2.publishers.sensors.CameraPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.damagepublisher method)": [[8, "beamng_ros2.publishers.sensors.DamagePublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.electricspublisher method)": [[8, "beamng_ros2.publishers.sensors.ElectricsPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.gforcespublisher method)": [[8, "beamng_ros2.publishers.sensors.GForcesPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.gpspublisher method)": [[8, "beamng_ros2.publishers.sensors.GPSPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.idealradarpublisher method)": [[8, "beamng_ros2.publishers.sensors.IdealRadarPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.lidarpublisher method)": [[8, "beamng_ros2.publishers.sensors.LidarPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.meshpublisher method)": [[8, "beamng_ros2.publishers.sensors.MeshPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.powertrainsensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.PowertrainSensorPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.radarpublisher method)": [[8, "beamng_ros2.publishers.sensors.RadarPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.roadssensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.RoadsSensorPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.sensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.statepublisher method)": [[8, "beamng_ros2.publishers.sensors.StatePublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.timerpublisher method)": [[8, "beamng_ros2.publishers.sensors.TimerPublisher.get_data"]], "get_data() (beamng_ros2.publishers.sensors.ultrasonicpublisher method)": [[8, "beamng_ros2.publishers.sensors.UltrasonicPublisher.get_data"]], "get_sensor_config() (beamng_ros2.publishers.sensors.sensorpublisher static method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.get_sensor_config"]], "get_sensor_publisher() (beamng_ros2.publishers.sensors.sensorpublisher static method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.get_sensor_publisher"]], "msg_type() (beamng_ros2.publishers.sensors.advancedimupublisher method)": [[8, "beamng_ros2.publishers.sensors.AdvancedIMUPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.camerapublisher method)": [[8, "beamng_ros2.publishers.sensors.CameraPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.damagepublisher method)": [[8, "beamng_ros2.publishers.sensors.DamagePublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.electricspublisher method)": [[8, "beamng_ros2.publishers.sensors.ElectricsPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.gforcespublisher method)": [[8, "beamng_ros2.publishers.sensors.GForcesPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.gpspublisher method)": [[8, "beamng_ros2.publishers.sensors.GPSPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.idealradarpublisher method)": [[8, "beamng_ros2.publishers.sensors.IdealRadarPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.lidarpublisher method)": [[8, "beamng_ros2.publishers.sensors.LidarPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.meshpublisher method)": [[8, "beamng_ros2.publishers.sensors.MeshPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.powertrainsensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.PowertrainSensorPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.radarpublisher method)": [[8, "beamng_ros2.publishers.sensors.RadarPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.roadssensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.RoadsSensorPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.statepublisher method)": [[8, "beamng_ros2.publishers.sensors.StatePublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.timerpublisher method)": [[8, "beamng_ros2.publishers.sensors.TimerPublisher.msg_type"]], "msg_type() (beamng_ros2.publishers.sensors.ultrasonicpublisher method)": [[8, "beamng_ros2.publishers.sensors.UltrasonicPublisher.msg_type"]], "poll() (beamng_ros2.publishers.sensors.autosensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.AutoSensorPublisher.poll"]], "poll() (beamng_ros2.publishers.sensors.classicalsensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.ClassicalSensorPublisher.poll"]], "poll() (beamng_ros2.publishers.sensors.sensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.poll"]], "post_scenario_start() (beamng_ros2.publishers.sensors.autosensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.AutoSensorPublisher.post_scenario_start"]], "pre_scenario_start() (beamng_ros2.publishers.sensors.classicalsensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.ClassicalSensorPublisher.pre_scenario_start"]], "pre_scenario_start() (beamng_ros2.publishers.sensors.statepublisher method)": [[8, "beamng_ros2.publishers.sensors.StatePublisher.pre_scenario_start"]], "publish() (beamng_ros2.publishers.sensors.camerapublisher method)": [[8, "beamng_ros2.publishers.sensors.CameraPublisher.publish"]], "publish() (beamng_ros2.publishers.sensors.sensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.publish"]], "remove() (beamng_ros2.publishers.sensors.autosensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.AutoSensorPublisher.remove"]], "remove() (beamng_ros2.publishers.sensors.classicalsensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.ClassicalSensorPublisher.remove"]], "remove() (beamng_ros2.publishers.sensors.sensorpublisher method)": [[8, "beamng_ros2.publishers.sensors.SensorPublisher.remove"]], "vehiclevisualizer (class in beamng_ros2.publishers.viz)": [[9, "beamng_ros2.publishers.viz.VehicleVisualizer"]], "beamng_ros2.publishers.viz": [[9, "module-beamng_ros2.publishers.viz"]], "get_data() (beamng_ros2.publishers.viz.vehiclevisualizer method)": [[9, "beamng_ros2.publishers.viz.VehicleVisualizer.get_data"]], "msg_type() (beamng_ros2.publishers.viz.vehiclevisualizer method)": [[9, "beamng_ros2.publishers.viz.VehicleVisualizer.msg_type"]], "publish() (beamng_ros2.publishers.viz.vehiclevisualizer method)": [[9, "beamng_ros2.publishers.viz.VehicleVisualizer.publish"]], "beamng_ros2.scenario_loader": [[10, "module-beamng_ros2.scenario_loader"]], "decode_scenario() (in module beamng_ros2.scenario_loader)": [[10, "beamng_ros2.scenario_loader.decode_scenario"]], "decode_sensors() (in module beamng_ros2.scenario_loader)": [[10, "beamng_ros2.scenario_loader.decode_sensors"]], "beamng_ros2.utils": [[11, "module-beamng_ros2.utils"]], "beamng_rot_to_ros_coords() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.beamng_rot_to_ros_coords"]], "beamng_vec_to_ros_coords() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.beamng_vec_to_ros_coords"]], "dict_to_list() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.dict_to_list"]], "float_to_duration() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.float_to_duration"]], "float_to_time() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.float_to_time"]], "get_path() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.get_path"]], "load_json() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.load_json"]], "quat_from_dir() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.quat_from_dir"]], "rgba_to_color() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.rgba_to_color"]], "xyz_to_list() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.xyz_to_list"]], "xyz_to_point() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.xyz_to_point"]], "xyz_to_vec3() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.xyz_to_vec3"]], "xyzw_to_quat() (in module beamng_ros2.utils)": [[11, "beamng_ros2.utils.xyzw_to_quat"]], "delay_offset_sec (beamng_ros2.vehicle.vehiclenode attribute)": [[12, "beamng_ros2.vehicle.VehicleNode.DELAY_OFFSET_SEC"]], "vehiclenode (class in beamng_ros2.vehicle)": [[12, "beamng_ros2.vehicle.VehicleNode"]], "beamng_ros2.vehicle": [[12, "module-beamng_ros2.vehicle"]], "destroy_node() (beamng_ros2.vehicle.vehiclenode method)": [[12, "beamng_ros2.vehicle.VehicleNode.destroy_node"]], "publisher_callback() (beamng_ros2.vehicle.vehiclenode method)": [[12, "beamng_ros2.vehicle.VehicleNode.publisher_callback"]], "reset_timer() (beamng_ros2.vehicle.vehiclenode method)": [[12, "beamng_ros2.vehicle.VehicleNode.reset_timer"]], "start_cosimulation() (beamng_ros2.vehicle.vehiclenode method)": [[12, "beamng_ros2.vehicle.VehicleNode.start_cosimulation"]], "stop_cosimulation() (beamng_ros2.vehicle.vehiclenode method)": [[12, "beamng_ros2.vehicle.VehicleNode.stop_cosimulation"]]}})